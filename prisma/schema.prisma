generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Task {
  id          Int       @id @default(autoincrement())
  title       String
  project     String?
  energy      String?
  durationMin Int?
  status      String    @default("todo") // todo | doing | done
  dueDate     DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  sessions    Session[]
  subtasks    Subtask[]
  notes       Note[]
}

model Subtask {
  id        Int       @id @default(autoincrement())
  title     String
  status    String    @default("todo") // todo | doing | done
  order     Int       @default(0)
  task      Task      @relation(fields: [taskId], references: [id])
  taskId    Int
  sessions  Session[]
  notes     Note[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Session {
  id          Int       @id @default(autoincrement())
  type        String? // 'track' | 'focus' | 'break' | 'complete'
  task        Task?     @relation(fields: [taskId], references: [id])
  taskId      Int?
  subtask     Subtask?  @relation(fields: [subtaskId], references: [id])
  subtaskId   Int?
  startedAt   DateTime
  endedAt     DateTime?
  durationSec Int?
  createdAt   DateTime  @default(now())
}

model Note {
  id       Int     @id @default(autoincrement())
  title    String  @default("Untitled")
  content  String  @default("")
  color    String  @default("#FFF6A5") // default sticky yellow
  isPinned Boolean @default(false)

  // NEW â€” board layout
  x      Int @default(40)
  y      Int @default(40)
  width  Int @default(260)
  height Int @default(180)
  zIndex Int @default(1)

  task      Task?    @relation(fields: [taskId], references: [id])
  taskId    Int?
  subtask   Subtask? @relation(fields: [subtaskId], references: [id])
  subtaskId Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
